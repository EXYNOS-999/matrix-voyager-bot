# The configuration for the matrix portion of the bot. The bot's account should
# already be registered prior to running. The application service will claim the
# created user as its own.
matrix:
  # The homeserver URL for the bot. For example, https://matrix.org
  homeserverUrl: "https://t2bot.io"

  # The name of the homeserver (the part after the colon in a user ID)
  homeserverName: "t2bot.io"

  # The user's localpart (the part between the @ and : in a user ID)
  userLocalpart: "voyager"

# The configuration for the application service portion of the bot. This is required
# to be set for all workers so they can access the homeserver.
appservice:
  # The token the homeserver must supply in order to authenticate with the bot. This
  # should be generated by yourself and be suitably secure.
  hsToken: "GenerateYourOwnString"

  # The token the bot will use to authenticate with the homeserver. This should be
  # generated by yourself and be suitably secure.
  asToken: "SomeOtherString"

# The configuration for the web server portion. Only applies to workers which need
# a web server, such as the appservice worker.
web:
  # The port to bind the web server on
  port: 8184

  # The address to bind the web server to
  bindAddress: '0.0.0.0'

# The configuration for the various data sources for the bot. Most are required for
# all workers.
data:
  # The storage location for the appservice's tracking data. Must point to a single
  # file.
  appservice: "/data/appservice.json"

  # The storage location for the bot's generated avatar cache. Must point to a single
  # file.
  avatarCache: "/data/avatars.json"

# The configuration for the RabbitMQ connection. The various queues and exchanges
# will be created upon startup.
rabbitmq:
  # The protocol to use. Typically left unchanged.
  protocol: amqp

  # The host to connect to
  host: localhost

  # The port to connect on
  port: 5672

  # The username to use
  user: voyager

  # The password to use
  password: passw0rd

  # The vhost to connect on
  vhost: "/voyager"

  # The exchange that everything is tied into
  exchange: ex

  # The exchange that is used to retry events
  deadLetterExchange: dlx

  # The queue name that is used to hold dead letters
  deadLetterQueue: dlq

# Miscellaneous settings for the bot.
misc:
  # Where the bot can find a ui-avatars instance. See https://ui-avatars.com/ for
  # more information.
  uiAvatarsUrl: "https://ui-avatars.com"

# Settings for controlling how logging works
logging:
  file: logs/voyager.log
  console: true
  consoleLevel: info
  fileLevel: verbose
  rotate:
    size: 52428800 # bytes, default is 50mb
    count: 5